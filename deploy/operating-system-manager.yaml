apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: operating-system-manager
rules:
- apiGroups:
  - "cluster.k8s.io"
  resources:
  - "machinedeployments"
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: operating-system-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: operating-system-manager
subjects:
  - kind: ServiceAccount
    name: operating-system-manager
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: operating-system-manager
  namespace: kube-system
rules:
- apiGroups:
  - operatingsystemmanager.k8c.io
  resources:
  - operatingsystemprofile
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - operatingsystemmanager.k8c.io
  resources:
  - operatingsystemprofile/status
  verbs:
  - get
- apiGroups:
  - operatingsystemmanager.k8c.io
  resources:
  - operatingsystemconfig
  verbs:
  - "*"
- apiGroups:
  - operatingsystemmanager.k8c.io
  resources:
  - operatingsystemconfig/status
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - update
  - get
- apiGroups:
  - "coordination.k8s.io"
  resources:
  - leases
  verbs:
  - "*"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: operating-system-manager
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: operating-system-manager
subjects:
- kind: ServiceAccount
  name: operating-system-manager
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: operating-system-manager
  namespace: kube-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: operating-system-manager
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: operating-system-manager
  template:
    metadata:
      annotations:
        "prometheus.io/scrape": "true"
        "prometheus.io/port": "8080"
        "prometheus.io/path": "/metrics"
      labels:
        app: operating-system-manager
    spec:
      serviceAccountName: operating-system-manager
      containers:
        - image: quay.io/kubermatic/operating-system-manager:latest
          imagePullPolicy: IfNotPresent
          name: operating-system-manager
          command:
            - /usr/local/bin/osm-controller
            - -logtostderr
            - -v=3
            - -worker-count=5
            - -cluster-dns=10.10.10.10
            - -metrics-address=0.0.0.0:8080
            - -health-probe-address=0.0.0.0:8085
            - -namespace=kube-system
          ports:
            - containerPort: 8085
          livenessProbe:
            httpGet:
              path: /readyz
              port: 8085
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8085
            periodSeconds: 5
          resources:
            requests:
              memory: 500Mi
              cpu: 500m
            limits:
              memory: 500Mi
              cpu: 500m
